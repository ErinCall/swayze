Swayze
======

Swayze is an IRC bouncer written in Scala, meant to run anywhere that can run Java.

What's a bouncer? A bouncer is an IRC client that remains connected to IRC networks on your behalf. With a bouncer, instead of connecting directly to IRC, the user just logs into the bouncer, and the bouncer forwards along the messages it sees. It's common to use a bouncer for a few reasons, such as holding messages so they're not missed, pushing notifications in real time, and keeping connection information in a centralized place so that a user can use it from anywhere, even a mobile device.


Status
------

**Swayze does not yet work** and is a work in progress. It should be considered experimental.


Building
--------

Swayze can be built anywhere that has Java 7 and Maven installed. Note that it's _not_ necessary to have Scala installed.

To compile, use this command:

    make clean build


Configuration
-------------

Before you can run Swayze, you need a configuration file. Swayze uses the [HOCON file format] [1], which is like a variation on JSON that's a little kinder on humans. There's not yet a programatic way to manage this configuration, nor are the possibilities documented, but if you want to get started quickly, the following example should get Swayze configured and running on the network of your choice.

    swayze {
      networks = [
        {
          name     = Some Network
          host     = irc.example.org
          port     = 6667
          encoding = UTF-8
          channels = [ "#channel", "#anotherchannel" ]
          modules  = []
          nickname = swayze
        }
      ]
    }

Save that text into a file called `swayze.conf` and use it when running Swayze, described below.

The configuration file can also be used to set some of Akka's options, overriding the defaults defined within the program. To get tons of debugging output, the following configuration can go right in the same file below the Swayze configuration.

    akka {
      log-config-on-start              = on
      log-dead-letters                 = 10
      log-dead-letters-during-shutdown = on

      loglevel                         = DEBUG
      stdout-loglevel                  = DEBUG

      actor {
        debug {
          autoreceive  = on
          event-stream = on
          lifecycle    = on
          unhandled    = on
          receive      = on
        }
      }
    }


Running
-------

First, complete the build process, as described above, which will build a runnable JAR (Java Archive).

    make clean build

This command builds a shaded JAR at `target/swayze-${version}.jar` which can be run as a standalone program using Java.

This JAR can be run directly by Java, as in the following example. Note that the first argument must be the configuration file (see the above section).

    java -jar target/swayze-0.0.1.jar swayze.conf


Testing
-------

To run the tests, use this command:

    make clean test


Documentation
-------------

If you'd like documentation of Swayze's innards, generate the scaladocs with this command:

    make docs

Once that command completes, navigate to `target/site/scaladocs/index.html` in your browser.


License
-------

Swayze is released under the MIT license and is freely distributable.


[1]: https://github.com/typesafehub/config/blob/master/HOCON.md
